name: Debug and Deploy Documentation
on:
  push:
    branches:
      - main

jobs:
  debug-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Show directory structure
        run: |
          echo "Root directory contents:"
          ls -la
          echo "Finding Makefile:"
          find . -name "Makefile"
          echo "Finding conf.py:"
          find . -name "conf.py"
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx_rtd_theme
      
      - name: Build documentation
        run: |
          # This will be determined based on the path to your Makefile
          # We'll use a variable to store the directory
          DOCS_DIR=$(dirname $(find . -name "Makefile" | head -n 1))
          echo "Found Makefile in: $DOCS_DIR"
          if [ -n "$DOCS_DIR" ]; then
            cd "$DOCS_DIR"
            make html
          else
            echo "No Makefile found!"
            exit 1
          fi
      
      - name: Locate build directory
        id: find_build
        run: |
          BUILD_DIR=$(find . -type d -name "html" | grep -i build | head -n 1)
          if [ -n "$BUILD_DIR" ]; then
            echo "Found build directory: $BUILD_DIR"
            echo "::set-output name=build_dir::$BUILD_DIR"
          else
            echo "No build directory found!"
            # Try to guess based on conventional locations
            if [ -d "./docs/build/html" ]; then
              echo "Found ./docs/build/html"
              echo "::set-output name=build_dir::./docs/build/html"
            elif [ -d "./docs/_build/html" ]; then
              echo "Found ./docs/_build/html"
              echo "::set-output name=build_dir::./docs/_build/html"
            elif [ -d "./_build/html" ]; then
              echo "Found ./_build/html"
              echo "::set-output name=build_dir::./build/_build/html"
            else
              echo "Could not locate build directory!"
              exit 1
            fi
          fi
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ steps.find_build.outputs.build_dir }}
          force_orphan: true